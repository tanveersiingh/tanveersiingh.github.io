{
  "hash": "0515b1adc9d7aa6046f5fcd09c3a7483",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Creating a Figure in RStudio\"\ndescription: ENVS 193DS - Midterm, Problem 4\nauthor: \n  - name: Tanveer Singh\n    url: https://tanveersiingh.github.io/\ndate: 04-30-2025\nimage: /images/coding_preview.jpeg\n---\n\n\n\n## Explaination\n\nCleaning, wrangling, and creating visualization to analyze monthly rainfall from UCSB rain gauge.\n\n## setup\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# insert code to read in packages here\nlibrary(\"tidyverse\")\nlibrary(\"janitor\")\nlibrary(\"here\")\n# read in data\nrain <- read_csv(here(\"posts\", \"coding_example\", \"200dailys.csv\"))\n```\n:::\n\n\n\n## cleaning and wrangling\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrain_clean <- rain |>  \n  \n  # 1. what changes after this function? \n  # [the names of the columns are cleaned. The spaces are replaced with underscores.]\n  # give an example. \n  # [station id turns to station_id]\n  clean_names() |>  \n  \n  # 2. what new column is created? \n  # [A new column water_year_minus1 is created.]\n  # give an example of a value in this column.\n  # [water_year_minus1 reads 1959 for years 1960]\n  mutate(water_year_minus1 = water_year - 1) |>  \n  \n  # 3. what old column is changed?\n  # [water_year is changed]\n  # give an example of a value in the old column, and explain how it changed. \n  # [If a value in the old column is 1951, the following year is hyphenated and added onto the previous year. The new column is 1951 - 1952.]\n  mutate(water_year = paste0(water_year_minus1, \"-\", water_year)) |> \n  \n  # 4. what columns are excluded from the data frame?\n  # [The water_year_minus1 and code columns are excluded.]\n  # give an example of a value in water_year_minus1 \n  # [1957]\n  # give an example of a value in code \n  # [E311]\n  select(!c(water_year_minus1, code)) |> \n  \n  # 5. which column is manipulated, and what changes about it? \n  # Hint: run str(rain_clean) in the Console. what do you see for the month column?\n  # [The month column changes from col_double() to a factor with 12 levels. The relevel function is also reordering the levels to be explicitly specified. The number are representing the months of the year in a specific sequence.]\n  mutate(month = as_factor(month),\n         month = fct_relevel(\n           month, \n           \"9\", \"10\", \"11\", \"12\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\")\n         ) |>  \n  \n  # 6. what is being calculated? on an annual, monthly, or daily scale? \n  # [For each unique month represented by digits and water_year, the sum of the daily_rain values. na.rm = TRUE ensure missing values in daily_rain are ignored during the summation.]\n  # give an example. \n  # [It calculates the total for all the daily_rain values in month 9 of water_year 1952.]\n  group_by(month, water_year) %>% \n  summarize(total_rain = sum(daily_rain, na.rm = TRUE)) |>  \n  ungroup() |>  \n  # 7. what is being done to which columns? \n  # missing combinations of values of water_year and month are being filled in with 0\n  # give an example. \n  # july in 1951-1952 was not in the data frame previously, and now is present with a total rain of 0 inches\n  complete(water_year, \n           month, \n           fill = list(total_rain = 0)) |>  \n  \n  # 8. which observations are kept after this filtering step?\n  # [Only the observations from 2018-2024 are being kept.]\n  filter(water_year %in% c(\"2018-2019\", \n                           \"2019-2020\", \n                           \"2020-2021\", \n                           \"2021-2022\", \n                           \"2022-2023\", \n                           \"2023-2024\"))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`summarise()` has grouped output by 'month'. You can override using the\n`.groups` argument.\n```\n\n\n:::\n:::\n\n\n\n## Vizualization\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(rain_clean, # using rain_clean df\n       aes(x = month, # variable on x\n           y = total_rain, # variable on y\n           color = water_year, # color the years\n           group = water_year)) + # organize data by water_year\n  geom_line() + # connecting the plots with the same water_year\n  geom_point() + # adding points to the line\n  labs(x = \"Month\", # relabeling the x axis\n       y = \"Total monthly rain (inches)\", # relabeling the y axis\n       title = \"Monthly rainfall from UCSB rain gauge\", # adding title\n       color = \"Water year\") + # add colors\n  scale_color_manual(values = c(\"purple\", \"darkred\", \"orange\", \"gold\",\n                                \"darkgreen\", \"darkblue\"), # Changed the colors\n                     labels = c(\"2018-2019\", \"2019-2020\", \"2020-2021\", \"2021-2022\",\n                                \"2022-2023\", \"2023-2024\")) +\n  theme_bw() + # add theme\n  theme(\n    legend.position.inside = c(0.95, 0.95), # Place legend at top right inside the plot (updated from deprecated legend.position)\n    legend.justification = c(1, 1), # Anchor the top right of the legend to the coordinates\n    panel.grid.major = element_blank(), # remove major lines\n    panel.grid.minor = element_blank(), # remove minor lines\n    panel.border = element_blank(), # remove border\n    axis.ticks = element_blank(), # remove axis ticks\n    plot.title = element_text(hjust = 0) # center the plot title\n  )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}